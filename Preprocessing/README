This folder contains:

1) IRIS_mSEED_DL.py: Script to perform automated, simultaneous download (using Selenium and Chrome) of a day of IRIS data in 2-hr chunks
  - Packages required: selenium, webdriver-manager
  - Download ChromeDriver here: https://chromedriver.chromium.org/downloads
  - webdrive-manager automatically uses the correct ChromeDriver so you do not have to re-download the latest version each Chrome update
  - Modify the download URL to match your specific IRIS URL, which should have a similar format
  - Provide your username and password in the download URL if required, otherwise remove "user:password@"
  - Code can be modified to download from different time windows and in different chunks
  - 2-hr chunks were used here to avoid extremely large file sizes and to speed up the process through simultaneous downloads
  - TODO: Close browser after download completes

2) stAlign.py: Script to align stream trace times
  - Packages required: obspy
  - If your sampling period > seconds decimal precision specified for your traces, the stream traces can have various time offsets < sampling period
  - These time offsets are not a serious problem, as the stream trace times are still considered similar and the data length is the same
  - QuakeMigrate performs the exact same shifting if processing unaligned traces but also generates a message for each shift which clogs up the logs
  - Running this script prior to QuakeMigrate processing avoids the message spam in the logs by nominally aligning the stream trace times
  - Modify lines 20 and 21 depending on how you want to align your stream traces to a "master" starttime
  - TODO: Example of stream trace offsets

3) mSEED_ReformatQM.py: Script to center data and reformat miniSEED (mSEED) files for QuakeMigrate input
  - Packages required: numpy, obspy
  - QuakeMigrate requires the input traces to be separated by station-component and have specific filename formats (date_starttime_station_component)
  - Centering applied to the data to prevent underestimation/overestimation of the QM coalescence computation
  - Follows from our IRIS_mSEED_DL.py example, reformatting a day's worth of mSEED data in 2-hr chunks
  - 2-hr chunks were used to avoid extremely large file sizes; increase the chunk size or remove altogether if data size is small
  - Script assumes the standard 3 components (one vertical, two horizontal), comment out/remove unused component variables if < 3 components
  - A trace's channel and component can be found using tr.stats.channel and tr.stats.component, respectively
  - Ensure a corresponding QuakeMigrate/inputs/mSEED/year directory exists for the mSEED file being reformatted
  - TODO: Create inputs/mSEED/year-level directories if they do not already exist
  
